"""Add city table.

Revision ID: 7df9f77009a6
Revises: 9caa6a22ed8a
Create Date: 2021-02-02 20:57:07.730478

"""
from alembic import op, context
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '7df9f77009a6'
down_revision = '9caa6a22ed8a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create city table
    op.create_table('vaccination_city',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    conn = op.get_bind()
    places_map = list(conn.execute("SELECT * FROM places_map;"))
    full_places = list(conn.execute("SELECT * FROM vaccination_place;"))

    op.drop_table("vaccination_place")

    op.create_table('vaccination_place',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('nczi_id', sa.Integer(), nullable=True),
                    sa.Column('title', sa.String(length=128), nullable=True),
                    sa.Column('longitude', sa.Float(), nullable=True),
                    sa.Column('latitude', sa.Float(), nullable=True),
                    sa.Column('city_id', sa.Integer(), nullable=False),
                    sa.Column('street_name', sa.String(length=64), nullable=True),
                    sa.Column('street_number', sa.String(length=64), nullable=True),
                    sa.Column('online', sa.Boolean(), nullable=True),
                    sa.Column('free', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['city_id'], ['vaccination_city.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Create city_map for (SpotSubscription many-to-many City)
    op.create_table('city_map',
                    sa.Column('subscription_id', sa.Integer(), nullable=False),
                    sa.Column('city_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['city_id'], ['vaccination_city.id'], ),
                    sa.ForeignKeyConstraint(['subscription_id'], ['spot_subscription.id'], ),
                    sa.PrimaryKeyConstraint('subscription_id', 'city_id')
                    )

    # Map of place_id -> city_name
    places_cities = {place[0]: place[5] for place in full_places}
    # Map of city_name -> [place_id]
    cities_places = {}
    for place in full_places:
        id = place[0]
        city_name = place[5]
        city_places = cities_places.setdefault(city_name, [])
        city_places.append(id)
    context.config.print_stdout(str(cities_places))
    # Map of city_name -> city_id
    cities = {city_name: i for i, city_name in enumerate(cities_places.keys())}
    context.config.print_stdout(str(cities))
    # List of (subscription_id, city_id) for city_map table
    city_map_data = set((subscription_id, cities[places_cities[place_id]]) for subscription_id, place_id in places_map)
    context.config.print_stdout(str(city_map_data))

    for city_name, city_id in cities.items():
        op.execute(f"INSERT INTO vaccination_city VALUES ({city_id}, \"{city_name}\")")

    for place in full_places:
        op.execute(f"INSERT INTO vaccination_place VALUES ({place[0]}, {place[1]}, \"{place[2]}\", {place[3]}, {place[4]}, {cities[place[5]]}, \"{place[6]}\", \"{place[7]}\", {place[8]}, {place[9]})")

    for city_name, place_ids in cities_places.items():
        city_id = cities[city_name]
        for place_id in place_ids:
            op.execute(f"UPDATE vaccination_place SET city_id = {city_id} WHERE id = {place_id}")

    for sub_id, city_id in city_map_data:
        op.execute(f"INSERT INTO city_map VALUES ({sub_id}, {city_id})")

    op.drop_table("places_map")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vaccination_place', sa.Column('city', sa.VARCHAR(length=64), nullable=True))
    op.drop_constraint(None, 'vaccination_place', type_='foreignkey')
    op.drop_column('vaccination_place', 'city_id')
    op.drop_table('vaccination_city')
    # ### end Alembic commands ###
