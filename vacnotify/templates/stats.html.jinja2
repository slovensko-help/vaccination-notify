{% extends "base.html.jinja2" %}
{% from "utils.html.jinja2" import render_alerts %}
{% block head %}
    {{ super() }}
    <meta property="og:title" content="Notifikácie o COVID-19 vakcinácii"/>
    <meta property="og:type" content="website"/>
    <meta property="og:image" content="{{ url_for('static', filename='img/virus.svg', _external=True) }}"/>
    <meta property="og:image:alt" content="Obrázok vírusu"/>
    <meta property="og:url" content="{{ url_for('main.stats') }}"/>
    <meta property="og:locale" content="sk_SK"/>
{% endblock %}
{% block content %}
    <div class="govuk-width-container">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <h1 class="govuk-heading-xl">Štatistiky</h1>
            </div>
        </div>
    </div>
    <div class="govuk-width-container">
        <div class="govuk-grid-row govuk-!-margin-bottom-3">
            <div class="govuk-grid-column-full govuk-!-margin-top-2">
                <h2 class="govuk-heading-l" id="vaccinations">Očkovacie termíny</h2>
                <div class="govuk-grid-row row-with-gray-boxes">
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_vstats.total_free_online_spots }} <i
                                    class="fas fa-syringe"></i></h2>
                            <p class="govuk-body"><strong>Dostupné očkovacie termíny</strong></p>
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_vstats.online_places }} <i
                                    class="fas fa-map-marker"></i>
                            </h2>
                            <p class="govuk-body"><strong>Očkovacie miesta</strong></p>
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_vstats.online_cities }} <i
                                    class="fas fa-building"></i>
                            </h2>
                            <p class="govuk-body"><strong>Mestá s očkovacím miestom</strong></p>
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_vstats.datetime.strftime("%d.%m. %H:%M") }}</h2>
                            <p class="govuk-body"><strong>Posledná aktualizácia</strong></p>
                        </div>
                    </div>
                </div>
                <p class="govuk-body">
                    Dáta sa aktualizujú každých {{ format_timedelta(config["QUERY_PERIOD"]) }}.
                    Očkovací termín je dostupný, ak očkovacie miesto hlási v daný deň kapacitu a nie je v daný deň
                    zatvorené.
                </p>
                <div id="vaccination-stats-spots"></div>
                <div id="vaccination-stats-places"></div>
            </div>
        </div>
    </div>
    <div class="govuk-width-container">
        <div class="govuk-grid-row govuk-!-margin-bottom-3">
            <div class="govuk-grid-column-full govuk-!-margin-top-2">
                <h2 class="govuk-heading-l" id="subscriptions">Odber notifikácií</h2>
                <div class="govuk-grid-row row-with-gray-boxes">
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_sstats.unique_emails + current_sstats.unique_push_subs }}</h2>
                            <p class="govuk-body"><strong>Odbery notifikácii</strong></p>
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_sstats.spot_subs_confirmed + current_sstats.spot_subs_unconfirmed }}</h2>
                            <p class="govuk-body"><strong>Odbery notifikácií o voľných miestach</strong></p>
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_sstats.group_subs_confirmed + current_sstats.group_subs_unconfirmed }}</h2>
                            <p class="govuk-body"><strong>Odbery notifikácií o novej skupine</strong></p>
                        </div>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-!-margin-bottom-6 app-pane-gray govuk-!-padding-top-4 govuk-!-padding-bottom-2 govuk-!-padding-right-4 govuk-!-padding-left-4">
                            <h2 class="govuk-heading-l">{{ current_sstats.shared_emails + current_sstats.shared_push_subs }}</h2>
                            <p class="govuk-body"><strong>Zdieľané odbery</strong></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="govuk-width-container">
        <div class="govuk-grid-row govuk-!-margin-bottom-3">
            <div class="govuk-grid-column-full govuk-!-margin-top-2">
                <h3 class="govuk-heading-m">Odbery</h3>
                <p class="mx-4">

                </p>
                <div id="subscription-stats-both"></div>
            </div>
        </div>
    </div>
    <div class="govuk-width-container">
        <div class="govuk-grid-row govuk-!-margin-bottom-3">
            <div class="govuk-grid-column-full govuk-!-margin-top-2">
                <h3 class="govuk-heading-m">Odbery notifikácií o voľných miestach</h3>
                <p class="mx-4">
                    Počet odberov notifikácii o voľných miestach je značený
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#0d6efd" cx="10" cy="14" r="5"></circle>
                    </svg>
                    , a skladá sa z potvrdených odberov
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#3e7d00" cx="10" cy="14" r="5"></circle>
                    </svg>
                    a nepotvrdených odberov
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#ac1313" cx="10" cy="14" r="5"></circle>
                    </svg>
                    .
                </p>
                <div id="subscription-stats-spots"></div>
            </div>
        </div>
    </div>
    <div class="govuk-width-container">
        <div class="govuk-grid-row govuk-!-margin-bottom-3">
            <div class="govuk-grid-column-full govuk-!-margin-top-2">
                <h3 class="govuk-heading-m">Odbery notifikácií o novej skupine</h3>
                <p class="govuk-body">
                    Počet odberov notifikácii o nových skupinách je značený
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#0d6efd" cx="10" cy="14" r="5"></circle>
                    </svg>
                    , a skladá sa z potvrdených odberov
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#3e7d00" cx="10" cy="14" r="5"></circle>
                    </svg>
                    a nepotvrdených odberov
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#ac1313" cx="10" cy="14" r="5"></circle>
                    </svg>
                    .
                </p>
                <div id="subscription-stats-groups"></div>
            </div>
        </div>
    </div>
    <div class="govuk-width-container">
        <div class="govuk-grid-row govuk-!-margin-bottom-3">
            <div class="govuk-grid-column-full govuk-!-margin-top-2">
                <h3 class="govuk-heading-m">Odbery notifikácií podľa typu</h3>
                <p class="govuk-body">
                    Počet odberov notifikácií na email je značený
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#0d6efd" cx="10" cy="14" r="5"></circle>
                    </svg>
                    a počet odberov pomocou push notifikácii je značený
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                        <circle fill="#3e7d00" cx="10" cy="14" r="5"></circle>
                    </svg>.
                </p>
                <div id="subscription-stats-types"></div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        let vaccination_stats = JSON.parse('{{ vaccination_stats | tojson }}');
        vaccination_stats.forEach(d => {
            d.datetime = Date.parse(d.datetime)
        });
        let subscription_stats = JSON.parse('{{ subscription_stats | tojson }}');
        subscription_stats.forEach(d => {
            d.datetime = Date.parse(d.datetime);
            d.unique = d.unique_emails + d.unique_push_subs;
            d.shared = d.shared_emails + d.shared_push_subs;
            d.total_ids = d.spot_subs_top_id + d.group_subs_top_id;
            d.spot_subs_total = d.spot_subs_confirmed + d.spot_subs_unconfirmed;
            d.group_subs_total = d.group_subs_confirmed + d.group_subs_unconfirmed;
        });
        const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
        const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);
        const bp = Math.max(vw, vh);
        let width = 600;
        let height = 200;
        if (bp < 576) {
            width *= 0.7;
            height *= 0.7;
        } else if (bp <= 768) {
            width *= 0.8;
            height *= 0.8;
        } else if (bp <= 992) {
            width *= 0.9;
            height *= 0.9;
        } else if (bp <= 1200) {
        } else {
            width *= 1.1;
            height *= 1.1;
        }

        let margin = ({top: 20, right: 30, bottom: 30, left: 50});

        let locale = {
            "dateTime": "%A,%e.%B %Y, %X",
            "date": "%-d.%-m.%Y",
            "time": "%H:%M:%S",
            "periods": ["AM", "PM"],
            "days": ["nedeľa", "pondelok", "utorok", "streda", "štvrtok", "piatok", "sobota"],
            "shortDays": ["ne.", "po.", "ut.", "st.", "št.", "pia.", "so."],
            "months": ["január", "február", "marec", "apríl", "máj", "jún", "júl", "august", "september", "október", "november", "december"],
            "shortMonths": ["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"]
        }
        d3.timeFormatDefaultLocale(locale);

        let formatMillisecond = d3.timeFormat(".%L"),
            formatSecond = d3.timeFormat(":%S"),
            formatMinute = d3.timeFormat("%H:%M"),
            formatHour = d3.timeFormat("%H:00"),
            formatDay = d3.timeFormat("%a %d"),
            formatWeek = d3.timeFormat("%b %d"),
            formatMonth = d3.timeFormat("%B"),
            formatYear = d3.timeFormat("%Y");

        function multiFormat(date) {
            return (d3.timeSecond(date) < date ? formatMillisecond
                : d3.timeMinute(date) < date ? formatSecond
                    : d3.timeHour(date) < date ? formatMinute
                        : d3.timeDay(date) < date ? formatHour
                            : d3.timeMonth(date) < date ? (d3.timeWeek(date) < date ? formatDay : formatWeek)
                                : d3.timeYear(date) < date ? formatMonth
                                    : formatYear)(date);
        }

        function plotLine(stats, variables, id) {
            let maxVal = Math.max.apply(null, variables.map(variable => d3.max(stats, d => d[variable.param]) + variable.max_offset));
            let dates = stats.map(d => d.datetime).reverse();
            let len = stats.length;
            let y = d3.scaleLinear()
                .domain([0, maxVal]).nice()
                .range([height - margin.bottom, margin.top]);
            let yAxis = g => {
                let r = g.attr("transform", `translate(${margin.left},0)`)
                    .call(d3.axisLeft(y))
                    .call(g => g.selectAll(".tick line").clone()
                        .attr("x2", width - (margin.right + margin.left))
                        .attr("stroke-opacity", 0.1));
                variables.forEach((variable, i) => {
                    r = r.call(g => g.select(`.tick:nth-of-type(${i + 2})`).insert("circle")
                        .attr("fill", variable.color)
                        .attr("cx", 10)
                        .attr("r", 4));
                    r = r.call(g => g.select(`.tick:nth-of-type(${i + 2}) text`).clone()
                        .attr("x", 15)
                        .attr("text-anchor", "start")
                        .attr("font-weight", "bold")
                        .text(variable.label));
                });
                return r;
            }

            let x = d3.scaleTime()
                .domain(d3.extent(stats, d => d.datetime))
                .range([margin.left, width - margin.right]);
            let xAxis = g => g
                .attr("transform", `translate(0,${height - margin.bottom})`)
                .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0).tickFormat(multiFormat))
                .call(g => g.selectAll(".tick line").clone()
                    .attr("y2", -height + margin.top + margin.bottom)
                    .attr("stroke-opacity", 0.1));

            let hover = svg => {
                if ("ontouchstart" in document) svg
                    .style("-webkit-tap-highlight-color", "transparent")
                    .on("touchmove", moved)
                    .on("touchstart", entered)
                    .on("touchend", left)
                else svg
                    .on("mousemove", moved)
                    .on("mouseenter", entered)
                    .on("mouseleave", left);

                const dot = svg.append("g")
                    .attr("display", "none");

                dot.append("circle")
                    .attr("r", 3);

                dot.append("text")
                    .attr("fill", "black")
                    .attr("font-family", "sans-serif")
                    .attr("font-size", 10)
                    .attr("text-anchor", "middle")
                    .attr("y", -8);

                function moved(event) {
                    event.preventDefault();
                    const pointer = d3.pointer(event, this);
                    const xm = x.invert(pointer[0]);
                    const ym = y.invert(pointer[1]);
                    const i = d3.bisectCenter(dates, xm);
                    const s = d3.least(variables, variable => Math.abs(stats[len - i - 1][variable.param] - ym));
                    if (s !== undefined) {
                        const val = stats[len - i - 1][s.param];
                        dot.attr("fill", s.color);
                        dot.attr("transform", `translate(${x(dates[i])},${y(val)})`);
                        dot.select("text").text(val);
                    }
                }

                function entered() {
                    dot.attr("display", null);
                }

                function left() {
                    dot.attr("display", "none");
                }
            }

            const svg = d3.create("svg")
                .attr("viewBox", [0, 0, width, height]);

            variables.forEach((variable, i) => {
                let line = d3.line()
                    .defined(d => !isNaN(d[variable.param]))
                    .x(d => x(d.datetime))
                    .y(d => y(d[variable.param]));
                let path = svg.append("path")
                    .datum(stats)
                    .attr("fill", "none")
                    .attr("stroke", variable.color)
                    .attr("stroke-width", 1.5)
                    .attr("stroke-linejoin", "round")
                    .attr("stroke-linecap", "round")
                    .attr("d", line);
                if (variable.attrs) {
                    for (let attr in variable.attrs) {
                        path = path.attr(attr, variable.attrs[attr]);
                    }
                }
            });

            svg.append("g")
                .call(xAxis);

            svg.append("g")
                .call(yAxis);

            svg.call(hover);

            d3.select(id).append(() => svg.node());
        }

        plotLine(vaccination_stats, [
            {
                param: "total_free_online_spots",
                max_offset: 0,
                color: "#0d6efd",
                label: "Dostupné očkovacie termíny"
            }
        ], "#vaccination-stats-spots");

        plotLine(vaccination_stats, [
            {
                param: "online_places",
                max_offset: 0,
                color: "#0d6efd",
                label: "Očkovacie miesta"
            },
            {
                param: "online_cities",
                max_offset: 0,
                color: "#ac1313",
                label: "Mestá s očkovacím miestom"
            }
        ], "#vaccination-stats-places");

        plotLine(subscription_stats, [
            {
                param: "total_ids",
                max_offset: 0,
                color: "#343c4b",
                attrs: {
                    "stroke-dasharray": "4",
                    "stroke-opacity": 0.8
                },
                label: "Odbery (aj zrušené)"
            },
            {
                param: "unique",
                max_offset: 0,
                color: "#0d6efd",
                label: "Odbery notifikácií"
            },
            {
                param: "spot_subs_total",
                max_offset: 0,
                color: "#3e7d00",
                label: "Odbery notifikácií o voľných miestach"
            },
            {
                param: "group_subs_total",
                max_offset: 0,
                color: "#ac1313",
                label: "Odbery notifikácii o novej skupine"
            },
            {
                param: "shared",
                max_offset: 0,
                color: "#7a21c1",
                label: "Zdieľané odbery"
            }
        ], "#subscription-stats-both");

        plotLine(subscription_stats, [
            {
                param: "spot_subs_top_id",
                max_offset: 0,
                color: "#343c4b",
                attrs: {
                    "stroke-dasharray": "4",
                    "stroke-opacity": 0.8
                },
                label: "Odbery (aj zrušené)"
            },
            {
                param: "spot_subs_total",
                max_offset: 0,
                color: "#0d6efd",
                label: "Všetky"
            },
            {
                param: "spot_subs_confirmed",
                max_offset: 0,
                color: "#3e7d00",
                label: "Potvrdené"
            },
            {
                param: "spot_subs_unconfirmed",
                max_offset: 0,
                color: "#ac1313",
                label: "Nepotvrdené"
            }
        ], "#subscription-stats-spots");

        plotLine(subscription_stats, [
            {
                param: "group_subs_top_id",
                max_offset: 0,
                color: "#343c4b",
                attrs: {
                    "stroke-dasharray": "4",
                    "stroke-opacity": 0.8
                },
                label: "Odbery (aj zrušené)"
            },
            {
                param: "group_subs_total",
                max_offset: 0,
                color: "#0d6efd",
                label: "Všetky"
            },
            {
                param: "group_subs_confirmed",
                max_offset: 0,
                color: "#3e7d00",
                label: "Potvrdené"
            },
            {
                param: "group_subs_unconfirmed",
                max_offset: 0,
                color: "#ac1313",
                label: "Nepotvrdené"
            }
        ], "#subscription-stats-groups");

        plotLine(subscription_stats, [
            {
                param: "unique_emails",
                max_offset: 0,
                color: "#0d6efd",
                label: "Email"
            },
            {
                param: "unique_push_subs",
                max_offset: 0,
                color: "#3e7d00",
                label: "Push notifikácie"
            }
        ], "#subscription-stats-types");
    </script>
{% endblock %}